
class GfG
{
    int maxLen(int arr[], int n)
    {
        
        if(arr.length == 0 ) return 0;
        
        Map<Integer,Integer> map = new HashMap<>();
        
        int csum = 0;
        int ans = 0;
        for(int i = 0; i< n ; i++){
            // add current num to csum(total sum)
            csum += arr[i];
            // if at any moment the sum till now is 0 then store length
            if(csum == 0){
                ans = Math.max(ans,i+1);
            }else if(map.getOrDefault(csum,-1) == -1){ // if csum is not added yet then add it to map
                map.put(csum,i);
            }else{ // if we already have csum in the map then store length
                ans = Math.max(ans,i - map.get(csum));
            }
            
        }
        
        
        return ans;
    }
}

GFG :- https://practice.geeksforgeeks.org/problems/largest-subarray-with-0-sum/1