
class Solution
{
    //Function to count number of nodes in BST that lie in the given range.
    int getCount(Node root,int l, int h){
        
        Node curr = root;
        // counter to track count of nodes that lies in the given range
        int count = 0;
        
        while(curr != null){
            
            if(curr.left == null){
                // increase the count if current node is an answer
                if(curr.data >= l && curr.data <= h)count++;
                // if current node exceeds the range then break the loop
                if(curr.data > h) break;
                
                curr = curr.right;
            }else{
                Node pred = curr.left;
                
                while(pred.right != null && pred.right != curr){
                    pred = pred.right;
                }
                
                if(pred.right == null){
                    pred.right = curr;
                    curr = curr.left;
                }else{
                
                // increase the count if current node is an answer
                if(curr.data >= l && curr.data <= h)count++;
                // if current node exceeds the range then break the loop
                if(curr.data > h) break;
                
                    pred.right = null;
                    curr = curr.right;
                }
            }
            
        }
        
     
        return count;
        
    }
}


GFG :- https://practice.geeksforgeeks.org/problems/count-bst-nodes-that-lie-in-a-given-range/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article

CodeStudio :- https://www.codingninjas.com/studio/problems/counts-the-nodes_3118976?leftPanelTab=0

LeetCode :- https://leetcode.com/problems/range-sum-of-bst/submissions/