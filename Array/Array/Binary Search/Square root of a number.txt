// Method 1

public class Solution {

    // Method to calculate the integer square root of a given long N
    public static int sqrtN(long N) {
        
        // If N is 0, the square root is 0
        if(N == 0) return 0;

        // Initialize the answer variable to 1
        int ans = 1;

        // Loop until the square of ans exceeds N
        while(ans <= (N/ans)){
            ans++;
        }

        // Since the loop exits when ans^2 > N, return ans-1 as the integer square root
        return ans-1;

    }
}

Steps : 1. The idea is to find the number which divides the N and the remainder is equal greater then the number itself.
        2. If we get the that divides the number and remainder is greater than the num then we try for greater value. Otherwise lesser value.



// Method 2

import java.util.*;
import java.io.*;

public class Solution {

    // Method to calculate the integer square root of a given long N
    public static int sqrtN(long N) {
        
        // If N is 0 or 1, the square root is N
        if (N == 0 || N == 1) return (int)N;

        // Initialize the start and end points for binary search
        long start = 2;
        long end = N;

        // Perform binary search to find the square root
        // yaha galti karoge ? < ki jagah <= laga doge. 
        while (start < end) {
            // Calculate the middle point
            long mid = start + (end - start) / 2;

            // If mid is less than or equal to N/mid, update the start point
            if (mid <= (N / mid)) {
                start = mid + 1;
            } else {
                // If mid is greater than N/mid, update the end point
                end = mid;
            }
        }

        // Since the loop exits when start^2 > N, return start-1 as the integer square root
        return (int)(start - 1);
    }
}

Special Node :  while (start < end) is right , dont try  while (start <= end) it will fall in Inf. loop.

CodeStudio : https://www.codingninjas.com/studio/problems/square-root-integral_893351?leftPanelTab=0%3Futm_source%3Dstriver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=PROBLEM

GFG : https://practice.geeksforgeeks.org/problems/find-nth-root-of-m5843/1