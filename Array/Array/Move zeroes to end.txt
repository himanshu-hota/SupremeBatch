// Method 1

class Solution {
    public void moveZeroes(int[] nums) {
        
        int z =0 , n=0;
        for(int i : nums){
            if(i==0)    
                z++;
            else
                n++;
        }
        
        int ar1[] = new int[z] , j =0;
        int ar2[] = new int[n] , k=0;
        
        for(int i: nums){
            if(i ==0){
                ar1[j] = i;
                j++;
            }else{
                ar2[k] = i;
                k++;
            }
                
        }
        j =0;
        for(int i: ar2){
            nums[j] =i;
            j++;
        }
        for(int i: ar1){
            nums[j] =i;
            j++;
        }
    }
}

// Method 2

class Solution {
    public void moveZeroes(int[] arr) {

        int n = arr.length;

        List<Integer> nums = new ArrayList<>();

        for(int x : arr){
            if( x !=  0) nums.add(x);
        }

        int zero = n - nums.size();

        for(int i = 0; i< n; i++){

            if(i < nums.size()){
                arr[i] = nums.get(i);
            }else{
                arr[i] = 0;
            }
        }
        
    }
}

// Method 3

class Solution {
    public void moveZeroes(int[] arr) {

        int n = arr.length;

        int countOfNonZero = 0;

        for(int x : arr) {
            if(x != 0) countOfNonZero++;
        }

        int nums[] = new int[countOfNonZero];
        int idx = 0;
        for(int x : arr){
            if( x !=  0) nums[idx++] = x;
        }

        int zero = n - countOfNonZero;

        for(int i = 0; i< n; i++){

            if(i < countOfNonZero){
                arr[i] = nums[i];
            }else{
                arr[i] = 0;
            }
        }

    }
}


Steps : 1. Get count of all non zero elements, and store them in array/arraylist.
        2. Get count of zero elements.
        3. put all non zero elements at first half and zero to second half of the given array.

LeetCode : https://leetcode.com/problems/move-zeroes/submissions/1091401766/