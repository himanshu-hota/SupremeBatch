class Solution {
    // Merge nodes with consecutive zero values in a linked list
    public ListNode mergeNodes(ListNode head) {
        
        // Check if the input list is empty
        if(head == null) return head;

        // Initialize pointers for traversal
        ListNode newHead = head;          // Pointer to the current node in the modified list
        ListNode lastNodeOfNewHead = null; // Pointer to the last node in the modified list
        ListNode curr = head.next;         // Pointer to the current node in the original list
        
        int sum = 0; // Variable to store the sum of non-zero values

        // Traverse the original list
        while(curr != null){
            // If the current node's value is zero
            if(curr.val == 0){
                newHead.val = sum;          // Update the value of the current node in the modified list
                sum = 0;                    // Reset the sum for the next sequence of non-zero values
                lastNodeOfNewHead = newHead; // Update the last node pointer
                newHead = newHead.next;      // Move to the next node in the modified list
            }else{
                sum += curr.val;             // Accumulate non-zero values
            }

            curr = curr.next; // Move to the next node in the original list
        }

        // Set the next pointer of the last node in the modified list to null
        lastNodeOfNewHead.next = null;
        
        // Return the head of the modified list
        return head;

    }
}


LeetCode :- https://leetcode.com/problems/merge-nodes-in-between-zeros/description/

CodeStudio :- https://www.codingninjas.com/codestudio/problems/sum-between-zeroes_630463  