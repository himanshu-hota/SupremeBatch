class Solution {
    
    // Helper method to find the length of the linked list
    int findLen(Node head) {
        Node curr = head;
        int n = 0;
        
        // Traverse the linked list to count the number of nodes
        while (curr != null) {
            n++;
            curr = curr.next;
        }
        
        return n;
    }
    
    // Method to get the Nth node from the end of the linked list
    int getNthFromLast(Node head, int n) {
        
        // If the linked list is empty, return 0
        if (head == null) 
            return 0;
        
        // Find the length of the linked list
        int len = findLen(head);
        
        // If the value of n is greater than the length of the linked list, return -1
        if (n > len) 
            return -1;
        
        // If n is equal to the length of the linked list, return the data of the head node
        if (n == len) 
            return head.data;
        
        // Calculate the position of the node to be found
        int i = len - n;
        
        Node curr = head;
        
        // Traverse the linked list to the desired node
        while (i-- > 0) {
            curr = curr.next;
        }
        
        // Return the data of the Nth node from the end
        return curr.data;
    }
}


GFG :- https://practice.geeksforgeeks.org/problems/nth-node-from-end-of-linked-list/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article