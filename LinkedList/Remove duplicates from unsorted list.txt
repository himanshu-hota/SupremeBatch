public class Solution {

    // Function to remove duplicates from a linked list
    public static LinkedListNode<Integer> removeDuplicates(LinkedListNode<Integer> head) {
        // Check if the linked list is empty
        if (head == null) {
            return null; // Return null if the list is empty
        }

        // HashSet to keep track of unique elements
        HashSet<Integer> set = new HashSet<>();

        // Create a new head for the resulting linked list
        LinkedListNode<Integer> newHead = new LinkedListNode<>(-1);
        LinkedListNode<Integer> curr = head; // Pointer to iterate through the original list
        LinkedListNode<Integer> newNode = newHead; // Pointer to build the new list

        // Iterate through the original list
        while (curr != null) {
            // If the current element is not in the set, add it to the set and the new list
            if (!set.contains(curr.data)) {
                set.add(curr.data);
                newNode.next = curr;
                newNode = newNode.next;
            }
            curr = curr.next; // Move to the next element in the original list
        }

        newNode.next = null; // Set the next of the last node in the new list to null

        return newHead.next; // Return the head of the new list
    }
}


LeetCode :- https://www.codingninjas.com/codestudio/problems/remove-duplicates-from-unsorted-linked-list_1069331
