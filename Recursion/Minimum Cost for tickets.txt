class Solution {

    static int mincostTicketsHelper(int days[],int costs[],int i){

        // base case
        if(i >= days.length) return 0;

        // 1 Day cost
        int cost1 = costs[0] + mincostTicketsHelper(days,costs,i+1);

        // 7 Days cost
        int passEndDay = days[i] + 7 - 1;
        int j = i;
        while( j< days.length && days[j] <= passEndDay) j++; 
        int cost2 = costs[1] + mincostTicketsHelper(days,costs,j);

        // 7 Days cost
        passEndDay = days[i] + 30 - 1;
        j = i;
        while(j< days.length && days[j] <= passEndDay) j++; 
        int cost3 = costs[2] + mincostTicketsHelper(days,costs,j);


        return Math.min(cost1,Math.min(cost2,cost3));

    }

    public int mincostTickets(int[] days, int[] costs) {
        return mincostTicketsHelper(days,costs,0);
    }
}


Why we are iterating ?

Answer: because we dont want to buy tickets on the day we have already bought in case of buying tickets for 7 days or 30 days.

for an example if we buy tickets on day 2 for 7 days then we should buy next ticket on day 9 right?
